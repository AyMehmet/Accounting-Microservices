CREATE TABLE IF NOT EXISTS public.roles
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    insert_date_time text COLLATE pg_catalog."default",
    insert_user_id text COLLATE pg_catalog."default",
    is_deleted bool,
    last_update_date_time text COLLATE pg_catalog."default",
    last_update_user_id text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default"

)

    TABLESPACE pg_default;

ALTER TABLE public.roles
    OWNER to postgres;





CREATE TABLE IF NOT EXISTS public.users
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    insert_date_time text COLLATE pg_catalog."default",
    insert_user_id text COLLATE pg_catalog."default",
    is_deleted bool,
    last_update_date_time text COLLATE pg_catalog."default",
    last_update_user_id text COLLATE pg_catalog."default",
    enabled bool,
    user_name text COLLATE pg_catalog."default",
    pass_word text COLLATE pg_catalog."default",
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    phone text COLLATE pg_catalog."default",
    role_id int,
    company_id int,

    CONSTRAINT roles.id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION


)

    TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;



CREATE TABLE IF NOT EXISTS public.companies
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    insert_date_time text COLLATE pg_catalog."default",
    insert_user_id text COLLATE pg_catalog."default",
    is_deleted bool,
    last_update_date_time text COLLATE pg_catalog."default",
    last_update_user_id text COLLATE pg_catalog."default",
    title text COLLATE pg_catalog."default",
    phone text COLLATE pg_catalog."default",
    website text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    address_id int,
    enabled bool,


    CONSTRAINT address_id_fkey FOREIGN KEY (address_id)
        REFERENCES public.addresses (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION


)

    TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;





CREATE TABLE IF NOT EXISTS public.addresses
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    insert_date_time text COLLATE pg_catalog."default",
    insert_user_id text COLLATE pg_catalog."default",
    is_deleted bool,
    last_update_date_time text COLLATE pg_catalog."default",
    last_update_user_id text COLLATE pg_catalog."default",
    enabled bool,
    address_line1 text COLLATE pg_catalog."default",
    address_line2 text COLLATE pg_catalog."default",
    city text COLLATE pg_catalog."default",
    state text COLLATE pg_catalog."default",
    country text COLLATE pg_catalog."default",
    zipCode   text COLLATE pg_catalog."default",

    role_id int,
    pass_word text COLLATE pg_catalog."default",
    CONSTRAINT roles_id_fkey FOREIGN KEY (role_id)
        REFERENCES public.roles (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION


)

    TABLESPACE pg_default;

ALTER TABLE public.addresses
    OWNER to postgres;

